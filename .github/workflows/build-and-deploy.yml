name: CI

on:
  push:
    branches: [ deploytest ]

env:
  GCP_PROJECT: ${{secrets.GCP_PROJECT}}
  GCE_INSTANCE_NAME: ${{secrets.GCE_INSTANCE_NAME}}
  GCE_INSTANCE_ZONE: ${{secrets.GCE_INSTANCE_ZONE}}

jobs:
  test-server:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.10.1'
      - name: Test
        run: |
          npm install --prefix server
          npm test --prefix server

  build-and-deploy-server:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      # - uses: mikefarah/yq@3.4.0
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "301.0.0"
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Install yq
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/3.4.0/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Auth docker with gcloud
        run: |
          gcloud --quiet auth configure-docker

      - name: Build docker images
        env:
          GCP_PROJECT: ${{secrets.GCP_PROJECT}}
        run: |
          yq w -i docker-compose.yml 'services.api.image' us.gcr.io/$GCP_PROJECT/api:latest
          export CLOUDSDK_PYTHON=/usr/bin/python
          export LD_LIBRARY_PATH=/usr/local/lib
          docker-compose build
          docker-compose push

      - name: Deploy
        env:
          GCP_PROJECT: ${{secrets.GCP_PROJECT}}
          GCE_INSTANCE_NAME: ${{secrets.GCE_INSTANCE_NAME}}
          GCE_INSTANCE_ZONE: ${{secrets.GCE_INSTANCE_ZONE}}
        run: |
          gcloud compute scp ./docker-compose.yml $GCE_INSTANCE_NAME:~/ --zone=$GCE_INSTANCE_ZONE
          gcloud compute ssh $GCE_INSTANCE_NAME --zone=$GCE_INSTANCE_ZONE --command='gcloud --quiet auth configure-docker'
          gcloud compute ssh $GCE_INSTANCE_NAME --zone=$GCE_INSTANCE_ZONE --command='docker-compose pull'
          gcloud compute ssh $GCE_INSTANCE_NAME --zone=$GCE_INSTANCE_ZONE --command='docker-compose up --force-recreate --no-build -d'
          gcloud compute ssh $GCE_INSTANCE_NAME --zone=$GCE_INSTANCE_ZONE --command="docker image prune -f"

  build-client:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install
        run: |
          cp public/config/settings.example.json public/config/settings.json
          npm install --prefix public
          npm link webpack
          npm link webpack-merge
      
          
      - name: Build
        run: npm run build --prefix public

   
